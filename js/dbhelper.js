class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static fetchRestaurants(t){var e=idb.open("restaurantsDB",1,function(t){t.createObjectStore("restaurants",{keyPath:"id"})});e.then(function(e){fetch(DBHelper.DATABASE_URL).then(t=>t.json()).then(function(o){var n=o,l=e.transaction("restaurants","readwrite").objectStore("restaurants");n&&n.forEach(function(t){l.put(t)}),t(null,n)}).catch(t=>console.log(t)).then(function(){e.transaction("restaurants","readonly").objectStore("restaurants").getAll().then(function(e){t(null,e)}).catch(e=>t(e,null))})}),e.catch(function(e){console.log("failed...reason is"),console.log(e),t(e,null)})}static fetchRestaurantById(t,e){DBHelper.fetchRestaurants((o,n)=>{if(o)e(o,null);else{const o=n.find(e=>e.id==t);o?e(null,o):e("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(t,e){DBHelper.fetchRestaurants((o,n)=>{if(o)e(o,null);else{const o=n.filter(e=>e.cuisine_type==t);e(null,o)}})}static fetchRestaurantByNeighborhood(t,e){DBHelper.fetchRestaurants((o,n)=>{if(o)e(o,null);else{const o=n.filter(e=>e.neighborhood==t);e(null,o)}})}static fetchRestaurantByCuisineAndNeighborhood(t,e,o){DBHelper.fetchRestaurants((n,l)=>{if(n)o(n,null);else{let n=l;"all"!=t&&(n=n.filter(e=>e.cuisine_type==t)),"all"!=e&&(n=n.filter(t=>t.neighborhood==e)),o(null,n)}})}static fetchNeighborhoods(t){DBHelper.fetchRestaurants((e,o)=>{if(e)t(e,null);else{const e=o.map((t,e)=>o[e].neighborhood),n=e.filter((t,o)=>e.indexOf(t)==o);t(null,n)}})}static fetchCuisines(t){DBHelper.fetchRestaurants((e,o)=>{if(e)t(e,null);else{const e=o.map((t,e)=>o[e].cuisine_type),n=e.filter((t,o)=>e.indexOf(t)==o);t(null,n)}})}static urlForRestaurant(t){return`./restaurant.html?id=${t.id}`}static imageUrlForRestaurant(t){return`/img/${t.photograph}`+".jpg"}static mapMarkerForRestaurant(t,e){return new google.maps.Marker({position:t.latlng,title:t.name,url:DBHelper.urlForRestaurant(t),map:e,animation:google.maps.Animation.DROP})}static submitReviewsSavedUntilOnline(){console.log("start to submit saved reviews...");let t=idb.open("postLaterDB",1,function(t){t.createObjectStore("laterStore")});t.then(function(t){let e=t.transaction("laterStore","readwrite").objectStore("laterStore");console.log("getting stuff out of the store...hopefully"),e.getAll().then(function(t){console.log("could get summin to post"),console.log(t),t.forEach(function(t){console.log("just before post"),fetch("http://localhost:1337/reviews/",{method:"post",body:t}).then(t=>t.json()).then(function(t){console.log(t),console.log("could now post...todo: delete entry")}).catch(function(){console.log("could still not post...")})})}).catch(t=>console.log("nothing from store to post now..."))}),t.catch(t=>console.log("could not open db..."))}static putReviewInDB(t){idb.open("postLaterDB",1,function(t){t.createObjectStore("laterStore")}).then(function(e){e.transaction("laterStore","readwrite").objectStore("laterStore").put(t,new Date)})}}